apiVersion: v1
data:
  ELASTICSEARCH_URL: http://es-cluster:9200
  XPACK_SECURITY_ENABLED: "true"
kind: ConfigMap
metadata:
  annotations:
    com.docker.enterprise.app.tribe: infrastructure
  labels:
    com.docker.enterprise.app: kibana
    com.docker.enterprise.infra.environment: Local
  name: kibana-config-752hkm45h7
  namespace: logging
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    com.docker.enterprise.app.tribe: infrastructure
  labels:
    com.docker.enterprise.app: kibana
    com.docker.enterprise.infra.class: Non-Exposed
    com.docker.enterprise.infra.environment: Local
    com.docker.enterprise.infra.tier: LoadBalancer
    com.docker.enterprise.service: kibana
  name: kibana
  namespace: logging
spec:
  ports:
  - name: http
    port: 5601
    protocol: TCP
  selector:
    com.docker.enterprise.app: kibana
    com.docker.enterprise.infra.class: Non-Exposed
    com.docker.enterprise.infra.environment: Local
    com.docker.enterprise.infra.tier: Service
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    com.docker.enterprise.app.tribe: infrastructure
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    com.docker.enterprise.app: kibana
    com.docker.enterprise.infra.class: Non-Exposed
    com.docker.enterprise.infra.environment: Local
    com.docker.enterprise.infra.tier: Service
  name: kibana-deployment
  namespace: logging
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      com.docker.enterprise.app: kibana
      com.docker.enterprise.infra.class: Non-Exposed
      com.docker.enterprise.infra.environment: Local
      com.docker.enterprise.infra.tier: Service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        com.docker.enterprise.app.tribe: infrastructure
      labels:
        com.docker.enterprise.app: kibana
        com.docker.enterprise.infra.class: Non-Exposed
        com.docker.enterprise.infra.environment: Local
        com.docker.enterprise.infra.tier: Service
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: kibana-config-752hkm45h7
        image: kibana:6.8.0
        imagePullPolicy: IfNotPresent
        name: kibana
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 10
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 250Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst      
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: logging
spec:
  rules:
    - host: kibana.jswann.dockerps.io
      http:
        paths:
        - path: /
          backend:
            # This assumes http-svc exists and routes to healthy endpoints
            serviceName: kibana
            servicePort: 5601